
Configure a local development environment with Eclipse to develop the Django post web application.

#################################################
# clone the project from github
#################################################

git clone git@github.com:maxmin13/messageboard-prj.git

#################################################
# configure the project in eclipse
#################################################

install eclipse pydev plugin from marketplace.

select pydev perspective

File/New/Project (not PyDev project)
Choose General/Project, click Next
Enter a project name
Uncheck "use default location" and set the location to the top directory of the messageboard-prj
Click Finish

#################################################
# create a virtual environment with python 3.11:
#################################################

cd messageboard-prj

python -m venv ".venv"
source .venv/bin/activate

# Software required:

python -m pip install ansible~=9.3.0
python -m pip install botocore~=1.34.61
python -m pip install boto3~=1.34.62
python -m pip install Django~=4.2.0
python -m pip install python-dotenv~=1.0.1
python -m pip install dj-database-url~=2.0.0
python -m pip install whitenoise~=6.5.0

# Development software:

python -m pip install black~=23.7.0
python -m pip install flake8
python -m pip install pycodestyle
                                        
#################################################
# Using PyDev with virtualenv
#################################################

add the interpreter from the virtual environment as another Python interpreter:

Menu Window, click Preferences, 
Go to PyDev - Interpreters - Python interpreter
In Python Interpreters section click New,
select "Browse for python/pypy exe", click "cancel" to close the browse file window,
enter a name, and the path to the python executable previously created from the command line, ex:
/home/vagrant/workspace/messageboard-prj/.venv/bin/python3
select all libraries
Click Apply and Close

Then, set the new interpreter as the interpreter for your project:

Right-click the project and select Properties
Go to Pydev - Interpreter/Grammar
Under Interpreter, select your new interpreter
Click Apply and Close


#################################################
# Run the Django webapplication locally:
#################################################

cd messageboard-prj
source .venv/bin/activate
cd project

python manage.py migrate
python manage.py createsuperuser --username=admin --email=admin@gmail.com
python manage.py runserver

# access Django admin console and from there the Post web application, create some posts
http://localhost:8000/admin
admin
admin

# load the posts in the Post web application
http://localhost:8000/


#################################################
# install pgAdmin (Postgress management tool)
#################################################

right click on Servers
Register, Server
Name: messageboard
Server group: Servers

select Connection tab
Host name/address: admin.maxmin.it
Port: 5432
Maintenance database: postgresqldb
Username: postgresqladmin
Password: secret

Save

#################################################
# AWS credentials:
#################################################

Login in AWS management console as root,
go to Iam, Users,
create a new user, for ex: awsadmin/awsadmin
provide the user with access to the AWS Management Console.
Select the user and create an access key for Command Line Interface (CLI).
Associate the user with an identity-based policy that allows access to route53 webservices,
for ex: AmazonRoute53FullAccess
Associate the user with an identity-based policy that allows access to ec2 webservices,
for ex: AmazonEC2FullAccess.
e
In you terminal, install AWS Command Line Interface (CLI)

enter the access key, the secret access key, your AWS region:

aws configure

#################################################
# Update the AWS production requirement.txt:
#################################################

cd messageboard-prj

rm -rf .venv
python -m venv ".venv"
source .venv/bin/activate

# install the libraries required in AWS production

python -m pip install ansible~=9.3.0
python -m pip install botocore~=1.34.61
python -m pip install boto3~=1.34.62
python -m pip install Django~=4.2.0
python -m pip install gunicorn~=21.2.0
python -m pip install python-dotenv~=1.0.1
python -m pip install psycopg2-binary~=2.9.0
python -m pip install whitenoise~=6.5.0
python -m pip install dj-database-url~=2.0.0

# freeze them in the production requirement.txt
# this requirement file is uploaded to the AWS instance.
python -m pip freeze > provision/playbooks/files/env/requirements.txt


#################################################
# Deploy the web application on AWS:
#################################################

edit config/datacenter.json and config/hostedzone.json and set the Vpc and DNS values according to your AWS account: 

VPC CIDR (eg: "Cidr": "10.0.0.0/16")
VPC region (eg: "Region": "eu-west-1")
Availability zone (eg: "Az": "eu-west-1a")
Subnet CIDR (eg: "Cidr": "10.0.20.0/24")
Instance private IP (eg: "PrivateIp": "10.0.20.35")
Set instance user name and instance user password with your AWS user credentials
(Not mandatory) DNS registered domain (your domain registered with the AWS registrar, eg: "RegisteredDomain": "maxmin.it")

cd messageboard-prj/bin

export AWS_REMOTE_USER=awsadmin
export AWS_REMOTE_USER_PASSWORD=awsadmin

run:

chmod +x make.sh
./make.sh


#################################################
# Log in the remote AWS instance:
#################################################

cd messageboard-prj/access

rm -f ~/.ssh/known_hosts && ssh -v -i messageboard-box -p 22 <remote AWS instance user pwd, eg: awsadmin>@<remote AWS instance IP address>

#################################################
# Access Django admin site at:
#################################################

https://messageboard.maxmin.it:8443/admin 

or:

https://AWS-instance-public-IP-address:8443/admin

userid: admin
password: admin

#################################################
# Access the messageboard webapp at:
#################################################

https://messageboard.maxmin.it:8443

or: 

https://AWS-instance-public-IP-address:8443

#################################################
# Delete the datacenter and the web application:
#################################################

cd messageboard-prj/bin
chmod +x delete.sh

./delete.sh
